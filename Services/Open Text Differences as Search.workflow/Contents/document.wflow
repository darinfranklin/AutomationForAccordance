<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>444.42</string>
	<key>AMApplicationVersion</key>
	<string>2.9</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionNameComment</key>
				<string>Save Text Differences File in Accordance</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- Copyright 2020, Darin Franklin-- https://github.com/darinfranklin/AutomationForAccordanceglobal mDisplay, mListTextDifferences, mFile, mSaveAsTextFile, mPlainText, mSave, mSaveAson run {}	-- Save Text Differences to a temp file.	-- Remove the file first so we are not prompted to replace it.	set filename to "/tmp/accdiff.txt"	-- Set the maximum time (in seconds) we want to wait for Accordance to save the file	set maxDelay to 60	do shell script "rm -f " &amp; filename	setMenuNames()	tell application "Accordance" to activate	delay 0.5	tell application "System Events" to tell process "Accordance"		tell menu bar 1 to tell menu bar item mDisplay to tell menu 1 to tell menu item mListTextDifferences to click		delay 1		tell menu bar 1 to tell menu bar item mFile to tell menu 1 to tell menu item mSaveAsTextFile to tell menu 1 to tell menu item mPlainText to click		tell window mSave to tell text field mSaveAs			keystroke filename			keystroke return			delay 1			keystroke return		end tell	end tell	delay 1	waitForFile(filename, maxDelay)end runon setMenuNames()	set lang to (characters 1 through 2 of user locale of (system info)) as text	if (lang = "en") then		set mDisplay to "Display"		set mListTextDifferences to "List Text Differences"		set mFile to "File"		set mSaveAsTextFile to "Save as Text File"		set mPlainText to "Plain Text…"		set mSave to "Save"		set mSaveAs to "Save As:"	else if (lang = "de") then		set mDisplay to "Darstellung"		set mListTextDifferences to "Unterschiede auflisten"		set mFile to "Ablage"		set mSaveAsTextFile to "Als Textdatei sichern"		set mPlainText to "Reiner Text…"		set mSave to "Sichern"		set mSaveAs to "Sichern als:"	else if (lang = "es") then		set mDisplay to "Visualizacin"		set mListTextDifferences to "Mostrar diferencias en los textos"		set mFile to "Archivo"		set mSaveAsTextFile to "Guardar como archivo de texto"		set mPlainText to "Texto sin formato…"		set mSave to "Guardar"		set mSaveAs to "Guardar como:"	else		-- Try by number, but the Display menu has extra items for "de" and "es". Other languages might also.		set mDisplay to 6		--set mListTextDifferences to 11		set mListTextDifferences to 8		set mFile to 3		set mSaveAsTextFile to 20		set mPlainText to 1		set mSave to 1		set mSaveAs to 1	end if	end setMenuNameson waitForFile(filename, sec)	set pollMax to sec	set poll to 0	set waiting to true	repeat while waiting		set poll to poll + 1		tell application "System Events" to set waiting to ((size of file filename) = 0) and poll &lt; pollMax		if waiting then delay 1	end repeatend waitForFile</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>9E0A1944-BDC3-4E55-BA74-CE1C36A898B8</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>B5348A42-B4AB-4B31-8AF9-AC263B5181A9</string>
				<key>UUID</key>
				<string>A853C3CC-4F53-4A56-8FA1-961F669CB1F6</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>554.000000:844.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>Run Shell Script</string>
				<key>ActionNameComment</key>
				<string>Extract Verses from Text Differences File</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string># Read the Text Differences file from Accordance and convert to an accord URL.
# File &gt; Save as Text File &gt; Plain Text...
import sys
import io
import re

from urllib import quote

def escapePath(value):
   return quote(value.encode('utf_8'))

def escapeQuery(value):
   value = value.replace(' ', '_')
   return quote(value.encode('utf_8'), ':;,._')

def accordURL(text, verses):
   return 'accord://read/{}?{}'.format(escapePath(text), escapeQuery(verses))

def consolidate(verses):
   result = ''
   curbook = ''
   curchap = 0
   for verse in verses.split(';'):
      verse  = verse.strip()
      sep = '; '
      match = re.search('\s*(.*?)\s+(\d*:?\d+)', verse)
      if match != None:
         book = match.group(1)
         ref = match.group(2)
         match = re.search('(\d+):(\d+)', ref)
         if match != None:
            ch = match.group(1)
            vs = match.group(2)
         else:
            ch = 1
            vs = ref
         if book == curbook:
            verse = ref
            if curchap == ch:
               sep = ','
               verse = vs
            else:
               curchap = ch
         else:
            curbook = book
            curchap = ch
      if result != '':
         result = result + sep
      result = result + verse
   return result

def extractTextName(header):
   m = re.match(r'(.*?)\s*\t(.*?)\t(.*)', header, flags=re.U)
   return m.group(2) if m != None else ''      

def extractVerses(lines):
   #lines = re.sub(r'.*\[.*', '', lines, flags=re.U) # remove lines with bracketed text
   lines = re.sub(r'\s*\t.*', '', lines, flags=re.U) # remove column 2 and 3
   lines = re.sub(r'\n+', ';', lines, flags=re.U)    # join all with ;
   lines = re.sub(r'^;|;$', '', lines, flags=re.U)   # remove leading and trailing ;
   return lines

# Reads /tmp/accdiff.txt
# Extracts the verse references.
# Prints the URL: accord://read/KJVS?Gen 1:1,2,3; Exod 1:1
if __name__ == '__main__':
   fn = sys.argv[1] if len(sys.argv) &gt; 1 else '/tmp/accdiff.txt'
   with io.open(fn, mode='r', encoding='utf_16') as f:
      header = f.readline()
      lines = f.read()
   text = extractTextName(header)
   verses = consolidate(extractVerses(lines))
   print(accordURL(text, verses))
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>0</integer>
					<key>shell</key>
					<string>/usr/bin/python</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>InputUUID</key>
				<string>159515E2-E3DE-46A5-AAFB-FCF7F548FA8C</string>
				<key>Keywords</key>
				<array>
					<string>Shell</string>
					<string>Script</string>
					<string>Command</string>
					<string>Run</string>
					<string>Unix</string>
				</array>
				<key>OutputUUID</key>
				<string>248B5548-5A23-4336-8816-9CED64B236EA</string>
				<key>UUID</key>
				<string>9F6C9501-3613-4E9D-AF0A-04986924C122</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>554.000000:885.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionNameComment</key>
				<string>Open URL</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}	open location inputend run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>A9130B29-F4E7-4989-91DD-27F95196D950</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>B06D21B6-0CAB-4378-B6C3-7DF672341640</string>
				<key>UUID</key>
				<string>A3A9D626-558F-48B0-B15E-B13E55DA8C89</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<false/>
				<key>location</key>
				<string>554.000000:926.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<false/>
		</dict>
	</array>
	<key>connectors</key>
	<dict>
		<key>5053B97B-4134-4FBF-B371-087441FF3701</key>
		<dict>
			<key>from</key>
			<string>A853C3CC-4F53-4A56-8FA1-961F669CB1F6 - A853C3CC-4F53-4A56-8FA1-961F669CB1F6</string>
			<key>to</key>
			<string>9F6C9501-3613-4E9D-AF0A-04986924C122 - 9F6C9501-3613-4E9D-AF0A-04986924C122</string>
		</dict>
		<key>A67809D2-B297-4563-A314-8A7846445B2D</key>
		<dict>
			<key>from</key>
			<string>9F6C9501-3613-4E9D-AF0A-04986924C122 - 9F6C9501-3613-4E9D-AF0A-04986924C122</string>
			<key>to</key>
			<string>A3A9D626-558F-48B0-B15E-B13E55DA8C89 - A3A9D626-558F-48B0-B15E-B13E55DA8C89</string>
		</dict>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleID</key>
		<string>com.OakTree.Accordance</string>
		<key>applicationBundleIDsByPath</key>
		<dict>
			<key>/Applications/Accordance.app</key>
			<string>com.OakTree.Accordance</string>
		</dict>
		<key>applicationPath</key>
		<string>/Applications/Accordance.app</string>
		<key>applicationPaths</key>
		<array>
			<string>/Applications/Accordance.app</string>
		</array>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>11</integer>
		<key>processesInput</key>
		<integer>0</integer>
		<key>serviceApplicationBundleID</key>
		<string>com.OakTree.Accordance</string>
		<key>serviceApplicationPath</key>
		<string>/Applications/Accordance.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>systemImageName</key>
		<string>NSActionTemplate</string>
		<key>useAutomaticInputType</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
